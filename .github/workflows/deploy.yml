name: Deploy to S3

env:
  CONTENTFUL_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_ACCESS_TOKEN }}
  CONTENTFUL_SPACE_ID: ${{ secrets.CONTENTFUL_SPACE_ID }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_S3_BUCKET_NAME: ${{ secrets.AWS_S3_BUCKET_NAME }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  GTM_ID: ${{ secrets.GTM_ID }}
  SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
  GATSBY_ADSENSE_PUB_ID: ${{ secrets.GATSBY_ADSENSE_PUB_ID }}
  GATSBY_ADSENSE_INARTICLE_AD_ID: ${{ secrets.GATSBY_ADSENSE_INARTICLE_AD_ID }}
  GATSBY_ADSENSE_INFEED_MOBILE_AD_ID: ${{ secrets.GATSBY_ADSENSE_INFEED_MOBILE_AD_ID }}
  GATSBY_ADSENSE_INFEED_MOBILE_AD_LAYOUT_KEY: ${{ secrets.GATSBY_ADSENSE_INFEED_MOBILE_AD_LAYOUT_KEY }}
  GATSBY_ADSENSE_INFEED_DESKTOP_AD_ID: ${{ secrets.GATSBY_ADSENSE_INFEED_DESKTOP_AD_ID }}
  GATSBY_ADSENSE_INFEED_DESKTOP_AD_LAYOUT_KEY: ${{ secrets.GATSBY_ADSENSE_INFEED_DESKTOP_AD_LAYOUT_KEY }}

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    environment: deploy

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'

      - run: yarn install
      - run: yarn build
      - run: yarn deploy

      - name: Invalidate CloudFront
        uses: chetan/invalidate-cloudfront-action@v2
        env:
          DISTRIBUTION: ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_ID }}
          PATHS: '/*'
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
